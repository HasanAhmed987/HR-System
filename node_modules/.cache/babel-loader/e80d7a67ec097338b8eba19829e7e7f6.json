{"ast":null,"code":"var _jsxFileName = \"/home/suddle/Documents/React/HR-System/src/components/common/footer/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport EnhancedTableHead from \"./TableHead\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { descendingComparator, getComparator, stableSort, headCells } from \"../../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Footer = _ref => {\n  _s();\n\n  let {\n    people\n  } = _ref;\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"name\");\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(15);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = people.map(n => n.image);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, image) => {\n    const selectedIndex = selected.indexOf(image);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, image);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = image => selected.indexOf(image) !== -1;\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - people.length) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 750\n        },\n        \"aria-labelledby\": \"tableTitle\",\n        size: dense ? \"small\" : \"medium\",\n        children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n          numSelected: selected.length,\n          order: order,\n          orderBy: orderBy,\n          onSelectAllClick: handleSelectAllClick,\n          onRequestSort: handleRequestSort,\n          rowCount: people.length,\n          headCells: headCells\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [stableSort(people, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n            const isItemSelected = isSelected(row.image);\n            const labelId = `enhanced-table-checkbox-${index}`;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              onClick: event => handleClick(event, row.image),\n              role: \"checkbox\",\n              \"aria-checked\": isItemSelected,\n              tabIndex: -1,\n              selected: isItemSelected,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                id: labelId,\n                scope: \"row\",\n                padding: \"none\",\n                children: row.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.contact\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)]\n            }, row.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this);\n          }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              height: (dense ? 33 : 53) * emptyRows\n            },\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 15, 20, 25, 30],\n      component: \"div\",\n      count: people.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Footer, \"JwM0AJSD2cgUO4ksimHDQKQbZR4=\");\n\n_c = Footer;\nexport default Footer; // import React, { useState } from \"react\";\n// import Details from \"../details\";\n// import Input from \"../input\";\n// import { Table } from \"react-bootstrap\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useTheme } from \"@mui/material/styles\";\n// import Box from \"@mui/material/Box\";\n// import IconButton from \"@mui/material/IconButton\";\n// import FirstPageIcon from \"@mui/icons-material/FirstPage\";\n// import KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\n// import KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\n// import LastPageIcon from \"@mui/icons-material/LastPage\";\n// import \"./style.css\";\n// const Footer = ({ people }) => {\n//   const [pageNumber, setPageNumber] = useState(0);\n//   const usersPerPage = 10;\n//   const pagesVisited = pageNumber * usersPerPage;\n//   const displayUsers = people.slice(pagesVisited, pagesVisited + usersPerPage);\n//   const pageCount = Math.ceil(people.length / usersPerPage);\n//   const theme = useTheme();\n//   const onPageChange = ({ selected }) => {\n//     setPageNumber(selected);\n//   };\n//   const handleFirstPageButtonClick = (event) => {\n//     onPageChange(event, 0);\n//   };\n//   const handleBackButtonClick = (event) => {\n//     onPageChange(event, pageNumber - 1);\n//   };\n//   const handleNextButtonClick = (event) => {\n//     onPageChange(event, pageNumber + 1);\n//   };\n//   const handleLastPageButtonClick = (event) => {\n//     onPageChange(event, Math.max(0, Math.ceil(pageCount / usersPerPage) - 1));\n//   };\n//   const [search, setSearch] = useState(\"\");\n//   const navigate = useNavigate();\n//   const [values] = useState([\n//     {\n//       type: \"text\",\n//       placeholder: \"Search\"\n//     }\n//   ]);\n//   const handleChange = (e) => {\n//     setSearch(e.target.value);\n//   };\n//   return (\n//     <div className=\"container\">\n//       <div className=\"filter-container\">\n//         <div className=\"search\">\n//           <Input\n//             values={values}\n//             className={\"searchBar\"}\n//             handleChange={handleChange}\n//           />\n//         </div>\n//         <div className=\"filter\">\n//           <select name=\"title\" id=\"title\">\n//             {displayUsers.map((item) => (\n//               <option\n//                 key={item.id.toString()}\n//                 value={item.title}\n//                 placeholder=\"Filter\"\n//               >\n//                 {item.title}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//       </div>\n//       <Table className=\"table\">\n//         <thead>\n//           <tr>\n//             <th scope=\"col\">Image</th>\n//             <th scope=\"col\">Name</th>\n//             <th scope=\"col\">Title</th>\n//             <th scope=\"col\">Email</th>\n//             <th scope=\"col\">Contact</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {displayUsers.map((item) => (\n//             <tr\n//               onClick={() => navigate(\"/people/details\", <Details />)}\n//               key={item.id.toString()}\n//             >\n//               <td>{item.image}</td>\n//               <td>{item.name}</td>\n//               <td>{item.title}</td>\n//               <td>{item.email}</td>\n//               <td>{item.contact}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </Table>\n//       <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n//         <IconButton\n//           onClick={handleFirstPageButtonClick}\n//           disabled={pageNumber === 0}\n//           aria-label=\"first page\"\n//         >\n//           {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleBackButtonClick}\n//           disabled={pageNumber === 0}\n//           aria-label=\"previous page\"\n//         >\n//           {theme.direction === \"rtl\" ? (\n//             <KeyboardArrowRightIcon />\n//           ) : (\n//             <KeyboardArrowLeftIcon />\n//           )}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleNextButtonClick}\n//           disabled={pageNumber >= Math.ceil(pageCount / usersPerPage) - 1}\n//           aria-label=\"next page\"\n//         >\n//           {theme.direction === \"rtl\" ? (\n//             <KeyboardArrowLeftIcon />\n//           ) : (\n//             <KeyboardArrowRightIcon />\n//           )}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleLastPageButtonClick}\n//           disabled={pageNumber >= Math.ceil(pageCount / usersPerPage) - 1}\n//           aria-label=\"last page\"\n//         >\n//           {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n//         </IconButton>\n//       </Box>\n//     </div>\n//   );\n// };\n// export default Footer;\n\n/*  */\n// <BootstrapTable\n//   bootstrap4\n//   keyField=\"id\"\n//   data={people}\n//   columns={columns}\n//   bordered={false}\n//   rowEvent={handleClick}\n// />\n// const columns = [\n//   {\n//     dataField: \"image\",\n//     text: \"Image\"\n//   },\n//   {\n//     dataField: \"name\",\n//     text: \"Name\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"title\",\n//     text: \"Title\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"email\",\n//     text: \"Email\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"contact\",\n//     text: \"Contact\",\n//     sort: true\n//   }\n// ];\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"sources":["/home/suddle/Documents/React/HR-System/src/components/common/footer/index.jsx"],"names":["React","useState","EnhancedTableHead","Box","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Paper","descendingComparator","getComparator","stableSort","headCells","Footer","people","order","setOrder","orderBy","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","event","property","isAsc","handleSelectAllClick","target","checked","newSelecteds","map","n","image","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","max","minWidth","row","index","isItemSelected","labelId","name","title","email","contact","height"],"mappings":"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":["import React, { useState } from \"react\";\nimport EnhancedTableHead from \"./TableHead\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport {\n  descendingComparator,\n  getComparator,\n  stableSort,\n  headCells\n} from \"../../../utils\";\n\nconst Footer = ({ people }) => {\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"name\");\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(15);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = people.map((n) => n.image);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, image) => {\n    const selectedIndex = selected.indexOf(image);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, image);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (image) => selected.indexOf(image) !== -1;\n\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - people.length) : 0;\n\n  return (\n    <div className=\"table\">\n      <TableContainer>\n        <Table\n          sx={{ minWidth: 750 }}\n          aria-labelledby=\"tableTitle\"\n          size={dense ? \"small\" : \"medium\"}\n        >\n          <EnhancedTableHead\n            numSelected={selected.length}\n            order={order}\n            orderBy={orderBy}\n            onSelectAllClick={handleSelectAllClick}\n            onRequestSort={handleRequestSort}\n            rowCount={people.length}\n            headCells={headCells}\n          />\n          <TableBody>\n            {stableSort(people, getComparator(order, orderBy))\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => {\n                const isItemSelected = isSelected(row.image);\n                const labelId = `enhanced-table-checkbox-${index}`;\n\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, row.image)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.name}\n                    selected={isItemSelected}\n                  >\n                    <TableCell\n                      component=\"th\"\n                      id={labelId}\n                      scope=\"row\"\n                      padding=\"none\"\n                    >\n                      {row.image}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.name}</TableCell>\n                    <TableCell align=\"right\">{row.title}</TableCell>\n                    <TableCell align=\"right\">{row.email}</TableCell>\n                    <TableCell align=\"right\">{row.contact}</TableCell>\n                  </TableRow>\n                );\n              })}\n            {emptyRows > 0 && (\n              <TableRow\n                style={{\n                  height: (dense ? 33 : 53) * emptyRows\n                }}\n              >\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 15, 20, 25, 30]}\n        component=\"div\"\n        count={people.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </div>\n  );\n};\n\nexport default Footer;\n\n// import React, { useState } from \"react\";\n// import Details from \"../details\";\n// import Input from \"../input\";\n// import { Table } from \"react-bootstrap\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useTheme } from \"@mui/material/styles\";\n// import Box from \"@mui/material/Box\";\n// import IconButton from \"@mui/material/IconButton\";\n// import FirstPageIcon from \"@mui/icons-material/FirstPage\";\n// import KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\n// import KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\n// import LastPageIcon from \"@mui/icons-material/LastPage\";\n// import \"./style.css\";\n\n// const Footer = ({ people }) => {\n//   const [pageNumber, setPageNumber] = useState(0);\n\n//   const usersPerPage = 10;\n//   const pagesVisited = pageNumber * usersPerPage;\n\n//   const displayUsers = people.slice(pagesVisited, pagesVisited + usersPerPage);\n\n//   const pageCount = Math.ceil(people.length / usersPerPage);\n\n//   const theme = useTheme();\n\n//   const onPageChange = ({ selected }) => {\n//     setPageNumber(selected);\n//   };\n\n//   const handleFirstPageButtonClick = (event) => {\n//     onPageChange(event, 0);\n//   };\n\n//   const handleBackButtonClick = (event) => {\n//     onPageChange(event, pageNumber - 1);\n//   };\n\n//   const handleNextButtonClick = (event) => {\n//     onPageChange(event, pageNumber + 1);\n//   };\n\n//   const handleLastPageButtonClick = (event) => {\n//     onPageChange(event, Math.max(0, Math.ceil(pageCount / usersPerPage) - 1));\n//   };\n\n//   const [search, setSearch] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const [values] = useState([\n//     {\n//       type: \"text\",\n//       placeholder: \"Search\"\n//     }\n//   ]);\n\n//   const handleChange = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"filter-container\">\n//         <div className=\"search\">\n//           <Input\n//             values={values}\n//             className={\"searchBar\"}\n//             handleChange={handleChange}\n//           />\n//         </div>\n//         <div className=\"filter\">\n//           <select name=\"title\" id=\"title\">\n//             {displayUsers.map((item) => (\n//               <option\n//                 key={item.id.toString()}\n//                 value={item.title}\n//                 placeholder=\"Filter\"\n//               >\n//                 {item.title}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//       </div>\n//       <Table className=\"table\">\n//         <thead>\n//           <tr>\n//             <th scope=\"col\">Image</th>\n//             <th scope=\"col\">Name</th>\n//             <th scope=\"col\">Title</th>\n//             <th scope=\"col\">Email</th>\n//             <th scope=\"col\">Contact</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {displayUsers.map((item) => (\n//             <tr\n//               onClick={() => navigate(\"/people/details\", <Details />)}\n//               key={item.id.toString()}\n//             >\n//               <td>{item.image}</td>\n//               <td>{item.name}</td>\n//               <td>{item.title}</td>\n//               <td>{item.email}</td>\n//               <td>{item.contact}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </Table>\n//       <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n//         <IconButton\n//           onClick={handleFirstPageButtonClick}\n//           disabled={pageNumber === 0}\n//           aria-label=\"first page\"\n//         >\n//           {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleBackButtonClick}\n//           disabled={pageNumber === 0}\n//           aria-label=\"previous page\"\n//         >\n//           {theme.direction === \"rtl\" ? (\n//             <KeyboardArrowRightIcon />\n//           ) : (\n//             <KeyboardArrowLeftIcon />\n//           )}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleNextButtonClick}\n//           disabled={pageNumber >= Math.ceil(pageCount / usersPerPage) - 1}\n//           aria-label=\"next page\"\n//         >\n//           {theme.direction === \"rtl\" ? (\n//             <KeyboardArrowLeftIcon />\n//           ) : (\n//             <KeyboardArrowRightIcon />\n//           )}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleLastPageButtonClick}\n//           disabled={pageNumber >= Math.ceil(pageCount / usersPerPage) - 1}\n//           aria-label=\"last page\"\n//         >\n//           {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n//         </IconButton>\n//       </Box>\n//     </div>\n//   );\n// };\n\n// export default Footer;\n\n/*  */\n// <BootstrapTable\n//   bootstrap4\n//   keyField=\"id\"\n//   data={people}\n//   columns={columns}\n//   bordered={false}\n//   rowEvent={handleClick}\n// />\n// const columns = [\n//   {\n//     dataField: \"image\",\n//     text: \"Image\"\n//   },\n//   {\n//     dataField: \"name\",\n//     text: \"Name\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"title\",\n//     text: \"Title\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"email\",\n//     text: \"Email\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"contact\",\n//     text: \"Contact\",\n//     sort: true\n//   }\n// ];\n"]},"metadata":{},"sourceType":"module"}