{"ast":null,"code":"var _jsxFileName = \"/home/suddle/Documents/React/HR-System/src/components/common/footer/Table/TableBody/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EnhancedTableBody(_ref) {\n  _s();\n\n  let {\n    people\n  } = _ref;\n  const [datatable, setDatatable] = React.useState({\n    columns: [{\n      label: \"Name\",\n      field: \"name\",\n      width: 150,\n      attributes: {\n        \"aria-controls\": \"DataTable\",\n        \"aria-label\": \"Name\"\n      }\n    }, {\n      label: \"Position\",\n      field: \"position\",\n      width: 270\n    }, {\n      label: \"Office\",\n      field: \"office\",\n      width: 200\n    }, {\n      label: \"Age\",\n      field: \"age\",\n      sort: \"asc\",\n      width: 100\n    }, {\n      label: \"Start date\",\n      field: \"date\",\n      sort: \"disabled\",\n      width: 150\n    }, {\n      label: \"Salary\",\n      field: \"salary\",\n      sort: \"disabled\",\n      width: 100\n    }],\n    rows: people\n  });\n  return /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n    hover: true,\n    entriesOptions: [5, 20, 25],\n    entries: 5,\n    pagesAmount: 4,\n    data: datatable,\n    searchTop: true,\n    searchBottom: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n} // import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import SearchBar from \"../../searchBar/index\";\n// import EnhancedTableHead from \"../TableHead/index\";\n// import \"./style.css\";\n// import Table from \"@mui/material/Table\";\n// import TableBody from \"@mui/material/TableBody\";\n// import TableCell from \"@mui/material/TableCell\";\n// import TableContainer from \"@mui/material/TableContainer\";\n// import TableRow from \"@mui/material/TableRow\";\n// const EnhancedTableBody = ({\n//   page,\n//   dense,\n//   selected,\n//   emptyRows,\n//   order,\n//   orderBy,\n//   rowsPerPage,\n//   handleSelectAllClick,\n//   handleRequestSort,\n//   getComparator,\n//   stableSort,\n//   headCells,\n//   people\n// }) => {\n//   const navigate = useNavigate();\n//   const [data, setData] = useState(people);\n//   const [queryStr, setQueryStr] = useState([]);\n//   const [titleFilter, setTitleFilter] = useState([]);\n//   // const [showTable, setShowTable] = useState(true);\n//   const handleQueryStr = (e, total = people) => {\n//     if (e === \"\") {\n//       setQueryStr([]);\n//       setData(titleFilter.length > 0 ? titleFilter : total);\n//     } else {\n//       let tempPeople = [];\n//       let totalPeople = titleFilter.length > 0 ? titleFilter : total;\n//       totalPeople.forEach((item) => {\n//         let filterArr = [\"name\", \"title\", \"contact\", \"email\"];\n//         filterArr.forEach((it) => {\n//           if (item[it].includes(e)) {\n//             if (!tempPeople.includes(item)) {\n//               tempPeople.push(item);\n//             }\n//           }\n//         });\n//       });\n//       setData(tempPeople);\n//       setQueryStr(tempPeople);\n//     }\n//   };\n//   const handleTitleFilter = (val, total = people) => {\n//     if (val.length === 0) {\n//       setTitleFilter([]);\n//       setData(queryStr.length > 0 ? queryStr : [...total]);\n//     } else {\n//       if (val.length === 0) {\n//         setData(total);\n//       } else {\n//         let resultArr = [];\n//         const tempPeople = queryStr.length > 0 ? queryStr : [...total];\n//         tempPeople.forEach((item) => {\n//           val.forEach((it) => {\n//             if (it.title === item.title) {\n//               resultArr.push(item);\n//             }\n//           });\n//         });\n//         setData(resultArr);\n//         setTitleFilter(resultArr);\n//       }\n//     }\n//   };\n//   const getQueryString = (e) => {\n//     handleQueryStr(e);\n//   };\n//   const getTitleFilter = (val) => {\n//     handleTitleFilter(val);\n//   };\n//   return (\n//     <div className=\"footer\">\n//       <SearchBar\n//         people={people}\n//         getQueryString={getQueryString}\n//         getTitleFilter={getTitleFilter}\n//       />\n//       <TableContainer>\n//         <Table\n//           sx={{ minWidth: 750 }}\n//           aria-labelledby=\"tableTitle\"\n//           size={dense ? \"small\" : \"medium\"}\n//         >\n//           <EnhancedTableHead\n//             numSelected={selected.length}\n//             order={order}\n//             orderBy={orderBy}\n//             onSelectAllClick={handleSelectAllClick}\n//             onRequestSort={handleRequestSort}\n//             rowCount={data.length}\n//             headCells={headCells}\n//           />\n//           <TableBody>\n//             {stableSort(data, getComparator(order, orderBy))\n//               .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//               .map((row, index) => {\n//                 const labelId = `enhanced-table-checkbox-${index}`;\n//                 return (\n//                   <TableRow\n//                     className=\"TableBodyRow\"\n//                     hover\n//                     onClick={() => navigate(\"/people/form\")}\n//                     key={row.name}\n//                   >\n//                     <TableCell\n//                       component=\"th\"\n//                       id={labelId}\n//                       scope=\"row\"\n//                       padding=\"none\"\n//                     >\n//                       {row.image}\n//                     </TableCell>\n//                     <TableCell align=\"right\">{row.name}</TableCell>\n//                     <TableCell align=\"right\">{row.title}</TableCell>\n//                     <TableCell align=\"right\">{row.email}</TableCell>\n//                     <TableCell align=\"right\">{row.contact}</TableCell>\n//                   </TableRow>\n//                 );\n//               })}\n//             {emptyRows > 0 && (\n//               <TableRow\n//                 style={{\n//                   height: (dense ? 33 : 53) * emptyRows\n//                 }}\n//               >\n//                 <TableCell colSpan={6} />\n//               </TableRow>\n//             )}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </div>\n//   );\n// };\n// export default EnhancedTableBody;\n\n_s(EnhancedTableBody, \"rDOwYEteMLHrKgKwROtMymucIUU=\");\n\n_c = EnhancedTableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnhancedTableBody\");","map":{"version":3,"names":["React","MDBDataTableV5","EnhancedTableBody","people","datatable","setDatatable","useState","columns","label","field","width","attributes","sort","rows"],"sources":["/home/suddle/Documents/React/HR-System/src/components/common/footer/Table/TableBody/index.jsx"],"sourcesContent":["import React from \"react\";\nimport { MDBDataTableV5 } from \"mdbreact\";\n\nexport default function EnhancedTableBody({ people }) {\n  const [datatable, setDatatable] = React.useState({\n    columns: [\n      {\n        label: \"Name\",\n        field: \"name\",\n        width: 150,\n        attributes: {\n          \"aria-controls\": \"DataTable\",\n          \"aria-label\": \"Name\"\n        }\n      },\n      {\n        label: \"Position\",\n        field: \"position\",\n        width: 270\n      },\n      {\n        label: \"Office\",\n        field: \"office\",\n        width: 200\n      },\n      {\n        label: \"Age\",\n        field: \"age\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Start date\",\n        field: \"date\",\n        sort: \"disabled\",\n        width: 150\n      },\n      {\n        label: \"Salary\",\n        field: \"salary\",\n        sort: \"disabled\",\n        width: 100\n      }\n    ],\n    rows: people\n  });\n\n  return (\n    <MDBDataTableV5\n      hover\n      entriesOptions={[5, 20, 25]}\n      entries={5}\n      pagesAmount={4}\n      data={datatable}\n      searchTop\n      searchBottom={false}\n    />\n  );\n}\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n\n// import SearchBar from \"../../searchBar/index\";\n// import EnhancedTableHead from \"../TableHead/index\";\n// import \"./style.css\";\n\n// import Table from \"@mui/material/Table\";\n// import TableBody from \"@mui/material/TableBody\";\n// import TableCell from \"@mui/material/TableCell\";\n// import TableContainer from \"@mui/material/TableContainer\";\n// import TableRow from \"@mui/material/TableRow\";\n\n// const EnhancedTableBody = ({\n//   page,\n//   dense,\n//   selected,\n//   emptyRows,\n//   order,\n//   orderBy,\n//   rowsPerPage,\n//   handleSelectAllClick,\n//   handleRequestSort,\n//   getComparator,\n//   stableSort,\n//   headCells,\n//   people\n// }) => {\n//   const navigate = useNavigate();\n//   const [data, setData] = useState(people);\n//   const [queryStr, setQueryStr] = useState([]);\n//   const [titleFilter, setTitleFilter] = useState([]);\n//   // const [showTable, setShowTable] = useState(true);\n\n//   const handleQueryStr = (e, total = people) => {\n//     if (e === \"\") {\n//       setQueryStr([]);\n//       setData(titleFilter.length > 0 ? titleFilter : total);\n//     } else {\n//       let tempPeople = [];\n//       let totalPeople = titleFilter.length > 0 ? titleFilter : total;\n//       totalPeople.forEach((item) => {\n//         let filterArr = [\"name\", \"title\", \"contact\", \"email\"];\n//         filterArr.forEach((it) => {\n//           if (item[it].includes(e)) {\n//             if (!tempPeople.includes(item)) {\n//               tempPeople.push(item);\n//             }\n//           }\n//         });\n//       });\n//       setData(tempPeople);\n//       setQueryStr(tempPeople);\n//     }\n//   };\n\n//   const handleTitleFilter = (val, total = people) => {\n//     if (val.length === 0) {\n//       setTitleFilter([]);\n//       setData(queryStr.length > 0 ? queryStr : [...total]);\n//     } else {\n//       if (val.length === 0) {\n//         setData(total);\n//       } else {\n//         let resultArr = [];\n//         const tempPeople = queryStr.length > 0 ? queryStr : [...total];\n//         tempPeople.forEach((item) => {\n//           val.forEach((it) => {\n//             if (it.title === item.title) {\n//               resultArr.push(item);\n//             }\n//           });\n//         });\n//         setData(resultArr);\n//         setTitleFilter(resultArr);\n//       }\n//     }\n//   };\n\n//   const getQueryString = (e) => {\n//     handleQueryStr(e);\n//   };\n\n//   const getTitleFilter = (val) => {\n//     handleTitleFilter(val);\n//   };\n\n//   return (\n//     <div className=\"footer\">\n//       <SearchBar\n//         people={people}\n//         getQueryString={getQueryString}\n//         getTitleFilter={getTitleFilter}\n//       />\n//       <TableContainer>\n//         <Table\n//           sx={{ minWidth: 750 }}\n//           aria-labelledby=\"tableTitle\"\n//           size={dense ? \"small\" : \"medium\"}\n//         >\n//           <EnhancedTableHead\n//             numSelected={selected.length}\n//             order={order}\n//             orderBy={orderBy}\n//             onSelectAllClick={handleSelectAllClick}\n//             onRequestSort={handleRequestSort}\n//             rowCount={data.length}\n//             headCells={headCells}\n//           />\n//           <TableBody>\n//             {stableSort(data, getComparator(order, orderBy))\n//               .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//               .map((row, index) => {\n//                 const labelId = `enhanced-table-checkbox-${index}`;\n\n//                 return (\n//                   <TableRow\n//                     className=\"TableBodyRow\"\n//                     hover\n//                     onClick={() => navigate(\"/people/form\")}\n//                     key={row.name}\n//                   >\n//                     <TableCell\n//                       component=\"th\"\n//                       id={labelId}\n//                       scope=\"row\"\n//                       padding=\"none\"\n//                     >\n//                       {row.image}\n//                     </TableCell>\n//                     <TableCell align=\"right\">{row.name}</TableCell>\n//                     <TableCell align=\"right\">{row.title}</TableCell>\n//                     <TableCell align=\"right\">{row.email}</TableCell>\n//                     <TableCell align=\"right\">{row.contact}</TableCell>\n//                   </TableRow>\n//                 );\n//               })}\n//             {emptyRows > 0 && (\n//               <TableRow\n//                 style={{\n//                   height: (dense ? 33 : 53) * emptyRows\n//                 }}\n//               >\n//                 <TableCell colSpan={6} />\n//               </TableRow>\n//             )}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </div>\n//   );\n// };\n\n// export default EnhancedTableBody;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,eAAe,SAASC,iBAAT,OAAuC;EAAA;;EAAA,IAAZ;IAAEC;EAAF,CAAY;EACpD,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAAe;IAC/CC,OAAO,EAAE,CACP;MACEC,KAAK,EAAE,MADT;MAEEC,KAAK,EAAE,MAFT;MAGEC,KAAK,EAAE,GAHT;MAIEC,UAAU,EAAE;QACV,iBAAiB,WADP;QAEV,cAAc;MAFJ;IAJd,CADO,EAUP;MACEH,KAAK,EAAE,UADT;MAEEC,KAAK,EAAE,UAFT;MAGEC,KAAK,EAAE;IAHT,CAVO,EAeP;MACEF,KAAK,EAAE,QADT;MAEEC,KAAK,EAAE,QAFT;MAGEC,KAAK,EAAE;IAHT,CAfO,EAoBP;MACEF,KAAK,EAAE,KADT;MAEEC,KAAK,EAAE,KAFT;MAGEG,IAAI,EAAE,KAHR;MAIEF,KAAK,EAAE;IAJT,CApBO,EA0BP;MACEF,KAAK,EAAE,YADT;MAEEC,KAAK,EAAE,MAFT;MAGEG,IAAI,EAAE,UAHR;MAIEF,KAAK,EAAE;IAJT,CA1BO,EAgCP;MACEF,KAAK,EAAE,QADT;MAEEC,KAAK,EAAE,QAFT;MAGEG,IAAI,EAAE,UAHR;MAIEF,KAAK,EAAE;IAJT,CAhCO,CADsC;IAwC/CG,IAAI,EAAEV;EAxCyC,CAAf,CAAlC;EA2CA,oBACE,QAAC,cAAD;IACE,KAAK,MADP;IAEE,cAAc,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAFlB;IAGE,OAAO,EAAE,CAHX;IAIE,WAAW,EAAE,CAJf;IAKE,IAAI,EAAEC,SALR;IAME,SAAS,MANX;IAOE,YAAY,EAAE;EAPhB;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,C,CAED;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;GAlNwBF,iB;;KAAAA,iB"},"metadata":{},"sourceType":"module"}