{"ast":null,"code":"var _jsxFileName = \"/home/suddle/Documents/React/HR-System/src/components/common/footer/index.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Paper from \"@mui/material/Paper\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) {\n      return order;\n    }\n\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: \"image\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Image\"\n}, {\n  id: \"name\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Name\"\n}, {\n  id: \"title\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Title\"\n}, {\n  id: \"email\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Email\"\n}, {\n  id: \"contact\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Contact\"\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? \"right\" : \"left\",\n        padding: headCell.disablePadding ? \"none\" : \"normal\",\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : \"asc\",\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            sx: visuallyHidden,\n            children: order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst Footer = _ref => {\n  _s();\n\n  let {\n    people\n  } = _ref;\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"name\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = people.map(n => n.image);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, image) => {\n    const selectedIndex = selected.indexOf(image);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, image);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = image => selected.indexOf(image) !== -1;\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - people.length) : 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: \"100%\",\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 750\n          },\n          \"aria-labelledby\": \"tableTitle\",\n          size: dense ? \"small\" : \"medium\",\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            numSelected: selected.length,\n            order: order,\n            orderBy: orderBy,\n            onSelectAllClick: handleSelectAllClick,\n            onRequestSort: handleRequestSort,\n            rowCount: people.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [stableSort(people, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const isItemSelected = isSelected(row.image);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row.image),\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"none\",\n                  children: row.image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.contact\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 23\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: (dense ? 33 : 53) * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: people.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Footer, \"U6vaR65TdQyo3PXpGFV9zGfZUKc=\");\n\n_c2 = Footer;\nexport default Footer; // import React, { useState } from \"react\";\n// import Details from \"../details\";\n// import Input from \"../input\";\n// import { Table } from \"react-bootstrap\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useTheme } from \"@mui/material/styles\";\n// import Box from \"@mui/material/Box\";\n// import IconButton from \"@mui/material/IconButton\";\n// import FirstPageIcon from \"@mui/icons-material/FirstPage\";\n// import KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\n// import KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\n// import LastPageIcon from \"@mui/icons-material/LastPage\";\n// import \"./style.css\";\n// const Footer = ({ people }) => {\n//   const [pageNumber, setPageNumber] = useState(0);\n//   const usersPerPage = 10;\n//   const pagesVisited = pageNumber * usersPerPage;\n//   const displayUsers = people.slice(pagesVisited, pagesVisited + usersPerPage);\n//   const pageCount = Math.ceil(people.length / usersPerPage);\n//   const theme = useTheme();\n//   const onPageChange = ({ selected }) => {\n//     setPageNumber(selected);\n//   };\n//   const handleFirstPageButtonClick = (event) => {\n//     onPageChange(event, 0);\n//   };\n//   const handleBackButtonClick = (event) => {\n//     onPageChange(event, pageNumber - 1);\n//   };\n//   const handleNextButtonClick = (event) => {\n//     onPageChange(event, pageNumber + 1);\n//   };\n//   const handleLastPageButtonClick = (event) => {\n//     onPageChange(event, Math.max(0, Math.ceil(pageCount / usersPerPage) - 1));\n//   };\n//   const [search, setSearch] = useState(\"\");\n//   const navigate = useNavigate();\n//   const [values] = useState([\n//     {\n//       type: \"text\",\n//       placeholder: \"Search\"\n//     }\n//   ]);\n//   const handleChange = (e) => {\n//     setSearch(e.target.value);\n//   };\n//   return (\n//     <div className=\"container\">\n//       <div className=\"filter-container\">\n//         <div className=\"search\">\n//           <Input\n//             values={values}\n//             className={\"searchBar\"}\n//             handleChange={handleChange}\n//           />\n//         </div>\n//         <div className=\"filter\">\n//           <select name=\"title\" id=\"title\">\n//             {displayUsers.map((item) => (\n//               <option\n//                 key={item.id.toString()}\n//                 value={item.title}\n//                 placeholder=\"Filter\"\n//               >\n//                 {item.title}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//       </div>\n//       <Table className=\"table\">\n//         <thead>\n//           <tr>\n//             <th scope=\"col\">Image</th>\n//             <th scope=\"col\">Name</th>\n//             <th scope=\"col\">Title</th>\n//             <th scope=\"col\">Email</th>\n//             <th scope=\"col\">Contact</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {displayUsers.map((item) => (\n//             <tr\n//               onClick={() => navigate(\"/people/details\", <Details />)}\n//               key={item.id.toString()}\n//             >\n//               <td>{item.image}</td>\n//               <td>{item.name}</td>\n//               <td>{item.title}</td>\n//               <td>{item.email}</td>\n//               <td>{item.contact}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </Table>\n//       <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n//         <IconButton\n//           onClick={handleFirstPageButtonClick}\n//           disabled={pageNumber === 0}\n//           aria-label=\"first page\"\n//         >\n//           {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleBackButtonClick}\n//           disabled={pageNumber === 0}\n//           aria-label=\"previous page\"\n//         >\n//           {theme.direction === \"rtl\" ? (\n//             <KeyboardArrowRightIcon />\n//           ) : (\n//             <KeyboardArrowLeftIcon />\n//           )}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleNextButtonClick}\n//           disabled={pageNumber >= Math.ceil(pageCount / usersPerPage) - 1}\n//           aria-label=\"next page\"\n//         >\n//           {theme.direction === \"rtl\" ? (\n//             <KeyboardArrowLeftIcon />\n//           ) : (\n//             <KeyboardArrowRightIcon />\n//           )}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleLastPageButtonClick}\n//           disabled={pageNumber >= Math.ceil(pageCount / usersPerPage) - 1}\n//           aria-label=\"last page\"\n//         >\n//           {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n//         </IconButton>\n//       </Box>\n//     </div>\n//   );\n// };\n// export default Footer;\n\n/*  */\n// <BootstrapTable\n//   bootstrap4\n//   keyField=\"id\"\n//   data={people}\n//   columns={columns}\n//   bordered={false}\n//   rowEvent={handleClick}\n// />\n// const columns = [\n//   {\n//     dataField: \"image\",\n//     text: \"Image\"\n//   },\n//   {\n//     dataField: \"name\",\n//     text: \"Name\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"title\",\n//     text: \"Title\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"email\",\n//     text: \"Email\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"contact\",\n//     text: \"Contact\",\n//     sort: true\n//   }\n// ];\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"Footer\");","map":{"version":3,"sources":["/home/suddle/Documents/React/HR-System/src/components/common/footer/index.jsx"],"names":["React","PropTypes","Box","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Paper","visuallyHidden","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","propTypes","number","isRequired","func","oneOf","string","Footer","people","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","image","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","max","width","mb","minWidth","row","isItemSelected","labelId","name","title","email","contact","height"],"mappings":"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":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Paper from \"@mui/material/Paper\";\nimport { visuallyHidden } from \"@mui/utils\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"image\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Image\"\n  },\n  {\n    id: \"name\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Name\"\n  },\n  {\n    id: \"title\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Title\"\n  },\n  {\n    id: \"email\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Email\"\n  },\n  {\n    id: \"contact\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Contact\"\n  }\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst Footer = ({ people }) => {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"name\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = people.map((n) => n.image);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, image) => {\n    const selectedIndex = selected.indexOf(image);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, image);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (image) => selected.indexOf(image) !== -1;\n\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - people.length) : 0;\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={people.length}\n            />\n            <TableBody>\n              {stableSort(people, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.image);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.image)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.image}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.name}</TableCell>\n                      <TableCell align=\"right\">{row.title}</TableCell>\n                      <TableCell align=\"right\">{row.email}</TableCell>\n                      <TableCell align=\"right\">{row.contact}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={people.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  );\n};\n\nexport default Footer;\n\n// import React, { useState } from \"react\";\n// import Details from \"../details\";\n// import Input from \"../input\";\n// import { Table } from \"react-bootstrap\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useTheme } from \"@mui/material/styles\";\n// import Box from \"@mui/material/Box\";\n// import IconButton from \"@mui/material/IconButton\";\n// import FirstPageIcon from \"@mui/icons-material/FirstPage\";\n// import KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\n// import KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\n// import LastPageIcon from \"@mui/icons-material/LastPage\";\n// import \"./style.css\";\n\n// const Footer = ({ people }) => {\n//   const [pageNumber, setPageNumber] = useState(0);\n\n//   const usersPerPage = 10;\n//   const pagesVisited = pageNumber * usersPerPage;\n\n//   const displayUsers = people.slice(pagesVisited, pagesVisited + usersPerPage);\n\n//   const pageCount = Math.ceil(people.length / usersPerPage);\n\n//   const theme = useTheme();\n\n//   const onPageChange = ({ selected }) => {\n//     setPageNumber(selected);\n//   };\n\n//   const handleFirstPageButtonClick = (event) => {\n//     onPageChange(event, 0);\n//   };\n\n//   const handleBackButtonClick = (event) => {\n//     onPageChange(event, pageNumber - 1);\n//   };\n\n//   const handleNextButtonClick = (event) => {\n//     onPageChange(event, pageNumber + 1);\n//   };\n\n//   const handleLastPageButtonClick = (event) => {\n//     onPageChange(event, Math.max(0, Math.ceil(pageCount / usersPerPage) - 1));\n//   };\n\n//   const [search, setSearch] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const [values] = useState([\n//     {\n//       type: \"text\",\n//       placeholder: \"Search\"\n//     }\n//   ]);\n\n//   const handleChange = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"filter-container\">\n//         <div className=\"search\">\n//           <Input\n//             values={values}\n//             className={\"searchBar\"}\n//             handleChange={handleChange}\n//           />\n//         </div>\n//         <div className=\"filter\">\n//           <select name=\"title\" id=\"title\">\n//             {displayUsers.map((item) => (\n//               <option\n//                 key={item.id.toString()}\n//                 value={item.title}\n//                 placeholder=\"Filter\"\n//               >\n//                 {item.title}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//       </div>\n//       <Table className=\"table\">\n//         <thead>\n//           <tr>\n//             <th scope=\"col\">Image</th>\n//             <th scope=\"col\">Name</th>\n//             <th scope=\"col\">Title</th>\n//             <th scope=\"col\">Email</th>\n//             <th scope=\"col\">Contact</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {displayUsers.map((item) => (\n//             <tr\n//               onClick={() => navigate(\"/people/details\", <Details />)}\n//               key={item.id.toString()}\n//             >\n//               <td>{item.image}</td>\n//               <td>{item.name}</td>\n//               <td>{item.title}</td>\n//               <td>{item.email}</td>\n//               <td>{item.contact}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </Table>\n//       <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n//         <IconButton\n//           onClick={handleFirstPageButtonClick}\n//           disabled={pageNumber === 0}\n//           aria-label=\"first page\"\n//         >\n//           {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleBackButtonClick}\n//           disabled={pageNumber === 0}\n//           aria-label=\"previous page\"\n//         >\n//           {theme.direction === \"rtl\" ? (\n//             <KeyboardArrowRightIcon />\n//           ) : (\n//             <KeyboardArrowLeftIcon />\n//           )}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleNextButtonClick}\n//           disabled={pageNumber >= Math.ceil(pageCount / usersPerPage) - 1}\n//           aria-label=\"next page\"\n//         >\n//           {theme.direction === \"rtl\" ? (\n//             <KeyboardArrowLeftIcon />\n//           ) : (\n//             <KeyboardArrowRightIcon />\n//           )}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleLastPageButtonClick}\n//           disabled={pageNumber >= Math.ceil(pageCount / usersPerPage) - 1}\n//           aria-label=\"last page\"\n//         >\n//           {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n//         </IconButton>\n//       </Box>\n//     </div>\n//   );\n// };\n\n// export default Footer;\n\n/*  */\n// <BootstrapTable\n//   bootstrap4\n//   keyField=\"id\"\n//   data={people}\n//   columns={columns}\n//   bordered={false}\n//   rowEvent={handleClick}\n// />\n// const columns = [\n//   {\n//     dataField: \"image\",\n//     text: \"Image\"\n//   },\n//   {\n//     dataField: \"name\",\n//     text: \"Name\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"title\",\n//     text: \"Title\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"email\",\n//     text: \"Email\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"contact\",\n//     text: \"Contact\",\n//     sort: true\n//   }\n// ];\n"]},"metadata":{},"sourceType":"module"}