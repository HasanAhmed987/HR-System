{"ast":null,"code":"var _jsxFileName = \"/home/suddle/Documents/React/HR-System/src/components/common/footer/index.jsx\";\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Footer = _ref => {\n  var _s = $RefreshSig$();\n\n  let {\n    people\n  } = _ref;\n\n  function createData(image, name, title, email, contact) {\n    return {\n      image,\n      name,\n      title,\n      email,\n      contact\n    };\n  }\n\n  const rows = [createData(\"Cupcake\", 305, 3.7, 67, 4.3), createData(\"Donut\", 452, 25.0, 51, 4.9), createData(\"Eclair\", 262, 16.0, 24, 6.0), createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0), createData(\"Gingerbread\", 356, 16.0, 49, 3.9), createData(\"Honeycomb\", 408, 3.2, 87, 6.5), createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3), createData(\"Jelly Bean\", 375, 0.0, 94, 0.0), createData(\"KitKat\", 518, 26.0, 65, 7.0), createData(\"Lollipop\", 392, 0.2, 98, 0.0), createData(\"Marshmallow\", 318, 0, 81, 2.0), createData(\"Nougat\", 360, 19.0, 9, 37.0), createData(\"Oreo\", 437, 18.0, 63, 4.0)];\n\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n\n      if (order !== 0) {\n        return order;\n      }\n\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n  }\n\n  const headCells = [{\n    id: \"image\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Image\"\n  }, {\n    id: \"name\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Name\"\n  }, {\n    id: \"title\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Title\"\n  }, {\n    id: \"email\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Email\"\n  }, {\n    id: \"contact\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Contact\"\n  }];\n\n  function EnhancedTableHead(props) {\n    const {\n      onSelectAllClick,\n      order,\n      orderBy,\n      numSelected,\n      rowCount,\n      onRequestSort\n    } = props;\n\n    const createSortHandler = property => event => {\n      onRequestSort(event, property);\n    };\n\n    return /*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n          align: headCell.numeric ? \"right\" : \"left\",\n          padding: headCell.disablePadding ? \"none\" : \"normal\",\n          sortDirection: orderBy === headCell.id ? order : false,\n          children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n            active: orderBy === headCell.id,\n            direction: orderBy === headCell.id ? order : \"asc\",\n            onClick: createSortHandler(headCell.id),\n            children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(Box, {\n              component: \"span\",\n              sx: visuallyHidden,\n              children: order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, headCell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n\n  EnhancedTableHead.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired\n  };\n\n  const EnhancedTableToolbar = props => {\n    const {\n      numSelected\n    } = props;\n    return /*#__PURE__*/_jsxDEV(Toolbar, {\n      sx: {\n        pl: {\n          sm: 2\n        },\n        pr: {\n          xs: 1,\n          sm: 1\n        },\n        ...(numSelected > 0 && {\n          bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\n        })\n      },\n      children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          flex: \"1 1 100%\"\n        },\n        color: \"inherit\",\n        variant: \"subtitle1\",\n        component: \"div\",\n        children: [numSelected, \" selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          flex: \"1 1 100%\"\n        },\n        variant: \"h6\",\n        id: \"tableTitle\",\n        component: \"div\",\n        children: \"Nutrition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Delete\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Filter list\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  };\n\n  EnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired\n  };\n\n  function EnhancedTable() {\n    _s();\n\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"name\");\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n      const isAsc = orderBy === property && order === \"asc\";\n      setOrder(isAsc ? \"desc\" : \"asc\");\n      setOrderBy(property);\n    };\n\n    const handleSelectAllClick = event => {\n      if (event.target.checked) {\n        const newSelecteds = rows.map(n => n.image);\n        setSelected(newSelecteds);\n        return;\n      }\n\n      setSelected([]);\n    };\n\n    const handleClick = (event, image) => {\n      const selectedIndex = selected.indexOf(image);\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, image);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n      setRowsPerPage(parseInt(event.target.value, 10));\n      setPage(0);\n    };\n\n    const isSelected = image => selected.indexOf(image) !== -1;\n\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: \"100%\",\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n          numSelected: selected.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 750\n            },\n            \"aria-labelledby\": \"tableTitle\",\n            size: dense ? \"small\" : \"medium\",\n            children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n              numSelected: selected.length,\n              order: order,\n              orderBy: orderBy,\n              onSelectAllClick: handleSelectAllClick,\n              onRequestSort: handleRequestSort,\n              rowCount: rows.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                const isItemSelected = isSelected(row.image);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  onClick: event => handleClick(event, row.image),\n                  role: \"checkbox\",\n                  \"aria-checked\": isItemSelected,\n                  tabIndex: -1,\n                  selected: isItemSelected,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    id: labelId,\n                    scope: \"row\",\n                    padding: \"none\",\n                    children: row.image\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.contact\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 25\n                  }, this)]\n                }, row.image, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 23\n                }, this);\n              }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                style: {\n                  height: (dense ? 33 : 53) * emptyRows\n                },\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: rows.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(EnhancedTable, \"U6vaR65TdQyo3PXpGFV9zGfZUKc=\");\n};\n\n_c = Footer;\nexport default Footer; // import React, { useState } from \"react\";\n// import Details from \"../details\";\n// import Input from \"../input\";\n// import { Table } from \"react-bootstrap\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useTheme } from \"@mui/material/styles\";\n// import Box from \"@mui/material/Box\";\n// import IconButton from \"@mui/material/IconButton\";\n// import FirstPageIcon from \"@mui/icons-material/FirstPage\";\n// import KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\n// import KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\n// import LastPageIcon from \"@mui/icons-material/LastPage\";\n// import \"./style.css\";\n// const Footer = ({ people }) => {\n//   const [pageNumber, setPageNumber] = useState(0);\n//   const usersPerPage = 10;\n//   const pagesVisited = pageNumber * usersPerPage;\n//   const displayUsers = people.slice(pagesVisited, pagesVisited + usersPerPage);\n//   const pageCount = Math.ceil(people.length / usersPerPage);\n//   const theme = useTheme();\n//   const onPageChange = ({ selected }) => {\n//     setPageNumber(selected);\n//   };\n//   const handleFirstPageButtonClick = (event) => {\n//     onPageChange(event, 0);\n//   };\n//   const handleBackButtonClick = (event) => {\n//     onPageChange(event, pageNumber - 1);\n//   };\n//   const handleNextButtonClick = (event) => {\n//     onPageChange(event, pageNumber + 1);\n//   };\n//   const handleLastPageButtonClick = (event) => {\n//     onPageChange(event, Math.max(0, Math.ceil(pageCount / usersPerPage) - 1));\n//   };\n//   const [search, setSearch] = useState(\"\");\n//   const navigate = useNavigate();\n//   const [values] = useState([\n//     {\n//       type: \"text\",\n//       placeholder: \"Search\"\n//     }\n//   ]);\n//   const handleChange = (e) => {\n//     setSearch(e.target.value);\n//   };\n//   return (\n//     <div className=\"container\">\n//       <div className=\"filter-container\">\n//         <div className=\"search\">\n//           <Input\n//             values={values}\n//             className={\"searchBar\"}\n//             handleChange={handleChange}\n//           />\n//         </div>\n//         <div className=\"filter\">\n//           <select name=\"title\" id=\"title\">\n//             {displayUsers.map((item) => (\n//               <option\n//                 key={item.id.toString()}\n//                 value={item.title}\n//                 placeholder=\"Filter\"\n//               >\n//                 {item.title}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//       </div>\n//       <Table className=\"table\">\n//         <thead>\n//           <tr>\n//             <th scope=\"col\">Image</th>\n//             <th scope=\"col\">Name</th>\n//             <th scope=\"col\">Title</th>\n//             <th scope=\"col\">Email</th>\n//             <th scope=\"col\">Contact</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {displayUsers.map((item) => (\n//             <tr\n//               onClick={() => navigate(\"/people/details\", <Details />)}\n//               key={item.id.toString()}\n//             >\n//               <td>{item.image}</td>\n//               <td>{item.name}</td>\n//               <td>{item.title}</td>\n//               <td>{item.email}</td>\n//               <td>{item.contact}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </Table>\n//       <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n//         <IconButton\n//           onClick={handleFirstPageButtonClick}\n//           disabled={pageNumber === 0}\n//           aria-label=\"first page\"\n//         >\n//           {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleBackButtonClick}\n//           disabled={pageNumber === 0}\n//           aria-label=\"previous page\"\n//         >\n//           {theme.direction === \"rtl\" ? (\n//             <KeyboardArrowRightIcon />\n//           ) : (\n//             <KeyboardArrowLeftIcon />\n//           )}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleNextButtonClick}\n//           disabled={pageNumber >= Math.ceil(pageCount / usersPerPage) - 1}\n//           aria-label=\"next page\"\n//         >\n//           {theme.direction === \"rtl\" ? (\n//             <KeyboardArrowLeftIcon />\n//           ) : (\n//             <KeyboardArrowRightIcon />\n//           )}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleLastPageButtonClick}\n//           disabled={pageNumber >= Math.ceil(pageCount / usersPerPage) - 1}\n//           aria-label=\"last page\"\n//         >\n//           {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n//         </IconButton>\n//       </Box>\n//     </div>\n//   );\n// };\n// export default Footer;\n\n/*  */\n// <BootstrapTable\n//   bootstrap4\n//   keyField=\"id\"\n//   data={people}\n//   columns={columns}\n//   bordered={false}\n//   rowEvent={handleClick}\n// />\n// const columns = [\n//   {\n//     dataField: \"image\",\n//     text: \"Image\"\n//   },\n//   {\n//     dataField: \"name\",\n//     text: \"Name\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"title\",\n//     text: \"Title\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"email\",\n//     text: \"Email\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"contact\",\n//     text: \"Contact\",\n//     sort: true\n//   }\n// ];\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"sources":["/home/suddle/Documents/React/HR-System/src/components/common/footer/index.jsx"],"names":["React","PropTypes","alpha","Box","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","visuallyHidden","Footer","people","createData","image","name","title","email","contact","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","propTypes","number","isRequired","func","oneOf","string","EnhancedTableToolbar","pl","sm","pr","xs","bgcolor","theme","palette","primary","main","action","activatedOpacity","flex","EnhancedTable","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","max","width","mb","minWidth","row","isItemSelected","labelId","height"],"mappings":"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":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\n\nconst Footer = ({ people }) => {\n  function createData(image, name, title, email, contact) {\n    return {\n      image,\n      name,\n      title,\n      email,\n      contact\n    };\n  }\n\n  const rows = [\n    createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n    createData(\"Donut\", 452, 25.0, 51, 4.9),\n    createData(\"Eclair\", 262, 16.0, 24, 6.0),\n    createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n    createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n    createData(\"Honeycomb\", 408, 3.2, 87, 6.5),\n    createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n    createData(\"Jelly Bean\", 375, 0.0, 94, 0.0),\n    createData(\"KitKat\", 518, 26.0, 65, 7.0),\n    createData(\"Lollipop\", 392, 0.2, 98, 0.0),\n    createData(\"Marshmallow\", 318, 0, 81, 2.0),\n    createData(\"Nougat\", 360, 19.0, 9, 37.0),\n    createData(\"Oreo\", 437, 18.0, 63, 4.0)\n  ];\n\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === \"desc\"\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) {\n        return order;\n      }\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n\n  const headCells = [\n    {\n      id: \"image\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Image\"\n    },\n    {\n      id: \"name\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Name\"\n    },\n    {\n      id: \"title\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Title\"\n    },\n    {\n      id: \"email\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Email\"\n    },\n    {\n      id: \"contact\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Contact\"\n    }\n  ];\n\n  function EnhancedTableHead(props) {\n    const {\n      onSelectAllClick,\n      order,\n      orderBy,\n      numSelected,\n      rowCount,\n      onRequestSort\n    } = props;\n    const createSortHandler = (property) => (event) => {\n      onRequestSort(event, property);\n    };\n\n    return (\n      <TableHead>\n        <TableRow>\n          {headCells.map((headCell) => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.numeric ? \"right\" : \"left\"}\n              padding={headCell.disablePadding ? \"none\" : \"normal\"}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : \"asc\"}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <Box component=\"span\" sx={visuallyHidden}>\n                    {order === \"desc\"\n                      ? \"sorted descending\"\n                      : \"sorted ascending\"}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n\n  EnhancedTableHead.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired\n  };\n\n  const EnhancedTableToolbar = (props) => {\n    const { numSelected } = props;\n\n    return (\n      <Toolbar\n        sx={{\n          pl: { sm: 2 },\n          pr: { xs: 1, sm: 1 },\n          ...(numSelected > 0 && {\n            bgcolor: (theme) =>\n              alpha(\n                theme.palette.primary.main,\n                theme.palette.action.activatedOpacity\n              )\n          })\n        }}\n      >\n        {numSelected > 0 ? (\n          <Typography\n            sx={{ flex: \"1 1 100%\" }}\n            color=\"inherit\"\n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography\n            sx={{ flex: \"1 1 100%\" }}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n          >\n            Nutrition\n          </Typography>\n        )}\n\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </Toolbar>\n    );\n  };\n\n  EnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired\n  };\n\n  function EnhancedTable() {\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"name\");\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n      const isAsc = orderBy === property && order === \"asc\";\n      setOrder(isAsc ? \"desc\" : \"asc\");\n      setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n      if (event.target.checked) {\n        const newSelecteds = rows.map((n) => n.image);\n        setSelected(newSelecteds);\n        return;\n      }\n      setSelected([]);\n    };\n\n    const handleClick = (event, image) => {\n      const selectedIndex = selected.indexOf(image);\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, image);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1)\n        );\n      }\n\n      setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n      setRowsPerPage(parseInt(event.target.value, 10));\n      setPage(0);\n    };\n\n    const isSelected = (image) => selected.indexOf(image) !== -1;\n\n    const emptyRows =\n      page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    return (\n      <Box sx={{ width: \"100%\" }}>\n        <Paper sx={{ width: \"100%\", mb: 2 }}>\n          <EnhancedTableToolbar numSelected={selected.length} />\n          <TableContainer>\n            <Table\n              sx={{ minWidth: 750 }}\n              aria-labelledby=\"tableTitle\"\n              size={dense ? \"small\" : \"medium\"}\n            >\n              <EnhancedTableHead\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rows.length}\n              />\n              <TableBody>\n                {stableSort(rows, getComparator(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row.image);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        onClick={(event) => handleClick(event, row.image)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.image}\n                        selected={isItemSelected}\n                      >\n                        <TableCell\n                          component=\"th\"\n                          id={labelId}\n                          scope=\"row\"\n                          padding=\"none\"\n                        >\n                          {row.image}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.name}</TableCell>\n                        <TableCell align=\"right\">{row.title}</TableCell>\n                        <TableCell align=\"right\">{row.email}</TableCell>\n                        <TableCell align=\"right\">{row.contact}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow\n                    style={{\n                      height: (dense ? 33 : 53) * emptyRows\n                    }}\n                  >\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Box>\n    );\n  }\n};\n\nexport default Footer;\n\n// import React, { useState } from \"react\";\n// import Details from \"../details\";\n// import Input from \"../input\";\n// import { Table } from \"react-bootstrap\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useTheme } from \"@mui/material/styles\";\n// import Box from \"@mui/material/Box\";\n// import IconButton from \"@mui/material/IconButton\";\n// import FirstPageIcon from \"@mui/icons-material/FirstPage\";\n// import KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\n// import KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\n// import LastPageIcon from \"@mui/icons-material/LastPage\";\n// import \"./style.css\";\n\n// const Footer = ({ people }) => {\n//   const [pageNumber, setPageNumber] = useState(0);\n\n//   const usersPerPage = 10;\n//   const pagesVisited = pageNumber * usersPerPage;\n\n//   const displayUsers = people.slice(pagesVisited, pagesVisited + usersPerPage);\n\n//   const pageCount = Math.ceil(people.length / usersPerPage);\n\n//   const theme = useTheme();\n\n//   const onPageChange = ({ selected }) => {\n//     setPageNumber(selected);\n//   };\n\n//   const handleFirstPageButtonClick = (event) => {\n//     onPageChange(event, 0);\n//   };\n\n//   const handleBackButtonClick = (event) => {\n//     onPageChange(event, pageNumber - 1);\n//   };\n\n//   const handleNextButtonClick = (event) => {\n//     onPageChange(event, pageNumber + 1);\n//   };\n\n//   const handleLastPageButtonClick = (event) => {\n//     onPageChange(event, Math.max(0, Math.ceil(pageCount / usersPerPage) - 1));\n//   };\n\n//   const [search, setSearch] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const [values] = useState([\n//     {\n//       type: \"text\",\n//       placeholder: \"Search\"\n//     }\n//   ]);\n\n//   const handleChange = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"filter-container\">\n//         <div className=\"search\">\n//           <Input\n//             values={values}\n//             className={\"searchBar\"}\n//             handleChange={handleChange}\n//           />\n//         </div>\n//         <div className=\"filter\">\n//           <select name=\"title\" id=\"title\">\n//             {displayUsers.map((item) => (\n//               <option\n//                 key={item.id.toString()}\n//                 value={item.title}\n//                 placeholder=\"Filter\"\n//               >\n//                 {item.title}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//       </div>\n//       <Table className=\"table\">\n//         <thead>\n//           <tr>\n//             <th scope=\"col\">Image</th>\n//             <th scope=\"col\">Name</th>\n//             <th scope=\"col\">Title</th>\n//             <th scope=\"col\">Email</th>\n//             <th scope=\"col\">Contact</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {displayUsers.map((item) => (\n//             <tr\n//               onClick={() => navigate(\"/people/details\", <Details />)}\n//               key={item.id.toString()}\n//             >\n//               <td>{item.image}</td>\n//               <td>{item.name}</td>\n//               <td>{item.title}</td>\n//               <td>{item.email}</td>\n//               <td>{item.contact}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </Table>\n//       <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n//         <IconButton\n//           onClick={handleFirstPageButtonClick}\n//           disabled={pageNumber === 0}\n//           aria-label=\"first page\"\n//         >\n//           {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleBackButtonClick}\n//           disabled={pageNumber === 0}\n//           aria-label=\"previous page\"\n//         >\n//           {theme.direction === \"rtl\" ? (\n//             <KeyboardArrowRightIcon />\n//           ) : (\n//             <KeyboardArrowLeftIcon />\n//           )}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleNextButtonClick}\n//           disabled={pageNumber >= Math.ceil(pageCount / usersPerPage) - 1}\n//           aria-label=\"next page\"\n//         >\n//           {theme.direction === \"rtl\" ? (\n//             <KeyboardArrowLeftIcon />\n//           ) : (\n//             <KeyboardArrowRightIcon />\n//           )}\n//         </IconButton>\n//         <IconButton\n//           onClick={handleLastPageButtonClick}\n//           disabled={pageNumber >= Math.ceil(pageCount / usersPerPage) - 1}\n//           aria-label=\"last page\"\n//         >\n//           {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n//         </IconButton>\n//       </Box>\n//     </div>\n//   );\n// };\n\n// export default Footer;\n\n/*  */\n// <BootstrapTable\n//   bootstrap4\n//   keyField=\"id\"\n//   data={people}\n//   columns={columns}\n//   bordered={false}\n//   rowEvent={handleClick}\n// />\n// const columns = [\n//   {\n//     dataField: \"image\",\n//     text: \"Image\"\n//   },\n//   {\n//     dataField: \"name\",\n//     text: \"Name\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"title\",\n//     text: \"Title\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"email\",\n//     text: \"Email\",\n//     sort: true\n//   },\n//   {\n//     dataField: \"contact\",\n//     text: \"Contact\",\n//     sort: true\n//   }\n// ];\n"]},"metadata":{},"sourceType":"module"}